// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Password. Should be render <Password />. 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Password
    confirmPwd={false}
    max={6}
    min={2}
    placeholder=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <styled.div>
        <label>
                Senha
        </label>
        <input
                className="pwd isEmpty"
                onChange={[Function]}
                placeholder=""
                required={true}
                type="password"
        />
        <styled.div
                className="isEmpty"
        >
                <div
                        className="stage"
                >
                        <div
                                className="progress"
                        >
                                stage 1
                        </div>
                </div>
                <div
                        className="stage"
                >
                        <div
                                className="progress"
                        >
                                stage 2
                        </div>
                </div>
                <div
                        className="stage"
                >
                        <div
                                className="progress"
                        >
                                stage 3
                        </div>
                </div>
        </styled.div>
        <StepField
                value=""
        >
                 Pelo menos 
                2
                 caracteres
        </StepField>
        <StepField
                value=""
        >
                 Pelo menos 1 letra maiúscula
        </StepField>
        <StepField
                value=""
        >
                 Pelo menos 1 número
        </StepField>
</styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <label>
            Senha
</label>,
          <input
            className="pwd isEmpty"
            onChange={[Function]}
            placeholder=""
            required={true}
            type="password"
/>,
          <styled.div
            className="isEmpty"
>
            <div
                        className="stage"
            >
                        <div
                                    className="progress"
                        >
                                    stage 1
                        </div>
            </div>
            <div
                        className="stage"
            >
                        <div
                                    className="progress"
                        >
                                    stage 2
                        </div>
            </div>
            <div
                        className="stage"
            >
                        <div
                                    className="progress"
                        >
                                    stage 3
                        </div>
            </div>
</styled.div>,
          <StepField
            value=""
>
             Pelo menos 
            2
             caracteres
</StepField>,
          <StepField
            value=""
>
             Pelo menos 1 letra maiúscula
</StepField>,
          <StepField
            value=""
>
             Pelo menos 1 número
</StepField>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Senha",
          },
          "ref": null,
          "rendered": "Senha",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "pwd isEmpty",
            "onChange": [Function],
            "placeholder": "",
            "required": true,
            "type": "password",
          },
          "ref": Object {
            "current": null,
          },
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="stage"
>
                <div
                                className="progress"
                >
                                stage 1
                </div>
</div>,
              <div
                className="stage"
>
                <div
                                className="progress"
                >
                                stage 2
                </div>
</div>,
              <div
                className="stage"
>
                <div
                                className="progress"
                >
                                stage 3
                </div>
</div>,
            ],
            "className": "isEmpty",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="progress"
>
                  stage 1
</div>,
                "className": "stage",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "stage 1",
                  "className": "progress",
                },
                "ref": null,
                "rendered": "stage 1",
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="progress"
>
                  stage 2
</div>,
                "className": "stage",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "stage 2",
                  "className": "progress",
                },
                "ref": null,
                "rendered": "stage 2",
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="progress"
>
                  stage 3
</div>,
                "className": "stage",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "stage 3",
                  "className": "progress",
                },
                "ref": null,
                "rendered": "stage 3",
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              " Pelo menos ",
              2,
              " caracteres",
            ],
            "value": "",
          },
          "ref": null,
          "rendered": Array [
            " Pelo menos ",
            2,
            " caracteres",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " Pelo menos 1 letra maiúscula",
            "value": "",
          },
          "ref": null,
          "rendered": " Pelo menos 1 letra maiúscula",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " Pelo menos 1 número",
            "value": "",
          },
          "ref": null,
          "rendered": " Pelo menos 1 número",
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <styled.div>
          <label>
                    Senha
          </label>
          <input
                    className="pwd isEmpty"
                    onChange={[Function]}
                    placeholder=""
                    required={true}
                    type="password"
          />
          <styled.div
                    className="isEmpty"
          >
                    <div
                              className="stage"
                    >
                              <div
                                        className="progress"
                              >
                                        stage 1
                              </div>
                    </div>
                    <div
                              className="stage"
                    >
                              <div
                                        className="progress"
                              >
                                        stage 2
                              </div>
                    </div>
                    <div
                              className="stage"
                    >
                              <div
                                        className="progress"
                              >
                                        stage 3
                              </div>
                    </div>
          </styled.div>
          <StepField
                    value=""
          >
                     Pelo menos 
                    2
                     caracteres
          </StepField>
          <StepField
                    value=""
          >
                     Pelo menos 1 letra maiúscula
          </StepField>
          <StepField
                    value=""
          >
                     Pelo menos 1 número
          </StepField>
</styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <label>
              Senha
</label>,
            <input
              className="pwd isEmpty"
              onChange={[Function]}
              placeholder=""
              required={true}
              type="password"
/>,
            <styled.div
              className="isEmpty"
>
              <div
                            className="stage"
              >
                            <div
                                          className="progress"
                            >
                                          stage 1
                            </div>
              </div>
              <div
                            className="stage"
              >
                            <div
                                          className="progress"
                            >
                                          stage 2
                            </div>
              </div>
              <div
                            className="stage"
              >
                            <div
                                          className="progress"
                            >
                                          stage 3
                            </div>
              </div>
</styled.div>,
            <StepField
              value=""
>
               Pelo menos 
              2
               caracteres
</StepField>,
            <StepField
              value=""
>
               Pelo menos 1 letra maiúscula
</StepField>,
            <StepField
              value=""
>
               Pelo menos 1 número
</StepField>,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Senha",
            },
            "ref": null,
            "rendered": "Senha",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "pwd isEmpty",
              "onChange": [Function],
              "placeholder": "",
              "required": true,
              "type": "password",
            },
            "ref": Object {
              "current": null,
            },
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="stage"
>
                  <div
                                    className="progress"
                  >
                                    stage 1
                  </div>
</div>,
                <div
                  className="stage"
>
                  <div
                                    className="progress"
                  >
                                    stage 2
                  </div>
</div>,
                <div
                  className="stage"
>
                  <div
                                    className="progress"
                  >
                                    stage 3
                  </div>
</div>,
              ],
              "className": "isEmpty",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="progress"
>
                    stage 1
</div>,
                  "className": "stage",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "stage 1",
                    "className": "progress",
                  },
                  "ref": null,
                  "rendered": "stage 1",
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="progress"
>
                    stage 2
</div>,
                  "className": "stage",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "stage 2",
                    "className": "progress",
                  },
                  "ref": null,
                  "rendered": "stage 2",
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="progress"
>
                    stage 3
</div>,
                  "className": "stage",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "stage 3",
                    "className": "progress",
                  },
                  "ref": null,
                  "rendered": "stage 3",
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                " Pelo menos ",
                2,
                " caracteres",
              ],
              "value": "",
            },
            "ref": null,
            "rendered": Array [
              " Pelo menos ",
              2,
              " caracteres",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": " Pelo menos 1 letra maiúscula",
              "value": "",
            },
            "ref": null,
            "rendered": " Pelo menos 1 letra maiúscula",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": " Pelo menos 1 número",
              "value": "",
            },
            "ref": null,
            "rendered": " Pelo menos 1 número",
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
